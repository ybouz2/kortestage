{"ast":null,"code":"var _jsxFileName = \"/Users/kabood/Documents/editabletext-hoc/src/components/editableBase.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (ChildComponent => {\n  class editableBase extends Component {\n    constructor(props) {\n      super(props); // console.log( 2, props)\n\n      this.onClick = (state, props) => {\n        this.setState({\n          edit: this.state.edit !== true\n        }); // console.log('base click')            \n      };\n\n      this.onChange = event => {\n        // this.props.text = event.target.value\n        // this.setState(() => ({value: event.target.value}))\n        this.editText = event.target.value;\n      };\n\n      this.editText = this.props.text; // this.state = {                \n      //   type: props.type ||'text',\n      //   value: props.text || '',\n      //   edit: false\n      // }\n\n      this.state = {\n        edit: false\n      };\n    }\n\n    // onFocus = event => {\n    //       const value = event.target.value\n    //       event.target.value = ''\n    //       event.target.value = value\n    //       this.setState((state, props) => ({ backup: state.value})) }\n    // onBlur = () => {\n    //     this.setState({edit:false})\n    //   }    \n    render() {\n      // console.log(this.state)\n      if (this.state.edit === true) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.editText // onFocus= {this.onFocus}\n            ,\n            onChange: this.onChange // onKeyUp = {this.onKeyUp}\n            // onBlur = {this.onBlur}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(ChildComponent, { ...this.props,\n        onClick: this.onClick,\n        text: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  return editableBase;\n});","map":{"version":3,"names":["React","Component","ChildComponent","editableBase","constructor","props","onClick","state","setState","edit","onChange","event","editText","target","value","text","render"],"sources":["/Users/kabood/Documents/editabletext-hoc/src/components/editableBase.js"],"sourcesContent":["import React, { Component } from 'react'\n\nexport default (ChildComponent) => {\n    class editableBase extends Component {\n\n        constructor(props){\n            super(props)\n            // console.log( 2, props)\n            this.editText = this.props.text\n            // this.state = {                \n            //   type: props.type ||'text',\n            //   value: props.text || '',\n            //   edit: false\n            // }\n            this.state = {                \n              edit: false\n            }\n          }\n      \n        onClick = (state, props) => {\n\n            this.setState({edit: this.state.edit!==true})\n            // console.log('base click')            \n          }\n\n        // save = (state, props) => {\n        //   this.setState((state, props) => ({edit:false, value: state.value}))\n\n          \n        //   }\n      \n        // onKeyUp = event => {\n        //     if(event.key==='Escape') {\n        //       this.setState((state, props) => ({edit:false, value: state.value}))\n        //     } \n        //   } \n      \n        onChange = event => {\n            // this.props.text = event.target.value\n            // this.setState(() => ({value: event.target.value}))\n              this.editText = event.target.value;\n            }\n      \n        // onFocus = event => {\n        //       const value = event.target.value\n        //       event.target.value = ''\n        //       event.target.value = value\n        //       this.setState((state, props) => ({ backup: state.value})) }\n      \n        // onBlur = () => {\n        //     this.setState({edit:false})\n        //   }    \n\n        render() { \n\n            // console.log(this.state)\n           \n            if(this.state.edit===true ){\n                return <div>\n                <input \n                  value={this.editText}\n                  // onFocus= {this.onFocus}\n                  onChange = {this.onChange}\n                  // onKeyUp = {this.onKeyUp}\n                  // onBlur = {this.onBlur}\n                  /> \n                {/* <button onClick = {this.onClick }> Save </button> */}\n                </div>\n                }\n               \n            return <ChildComponent  \n                    {...this.props }                     \n                    onClick = {this.onClick}\n                    text = {this.props.text}\n                    \n                    \n\n                    \n            />           \n        }\n      }\n      return editableBase;\n};"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,gBAAgBC,cAAD,IAAoB;EAC/B,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;IAEjCG,WAAW,CAACC,KAAD,EAAO;MACd,MAAMA,KAAN,EADc,CAEd;;MAFc,KAclBC,OAdkB,GAcR,CAACC,KAAD,EAAQF,KAAR,KAAkB;QAExB,KAAKG,QAAL,CAAc;UAACC,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAX,KAAkB;QAAzB,CAAd,EAFwB,CAGxB;MACD,CAlBe;;MAAA,KAgClBC,QAhCkB,GAgCPC,KAAK,IAAI;QAChB;QACA;QACE,KAAKC,QAAL,GAAgBD,KAAK,CAACE,MAAN,CAAaC,KAA7B;MACD,CApCa;;MAGd,KAAKF,QAAL,GAAgB,KAAKP,KAAL,CAAWU,IAA3B,CAHc,CAId;MACA;MACA;MACA;MACA;;MACA,KAAKR,KAAL,GAAa;QACXE,IAAI,EAAE;MADK,CAAb;IAGD;;IA0BH;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEAO,MAAM,GAAG;MAEL;MAEA,IAAG,KAAKT,KAAL,CAAWE,IAAX,KAAkB,IAArB,EAA2B;QACvB,oBAAO;UAAA,uBACP;YACE,KAAK,EAAE,KAAKG,QADd,CAEE;YAFF;YAGE,QAAQ,EAAI,KAAKF,QAHnB,CAIE;YACA;;UALF;YAAA;YAAA;YAAA;UAAA;QADO;UAAA;UAAA;UAAA;QAAA,QAAP;MAUC;;MAEL,oBAAO,QAAC,cAAD,OACK,KAAKL,KADV;QAEC,OAAO,EAAI,KAAKC,OAFjB;QAGC,IAAI,EAAI,KAAKD,KAAL,CAAWU;MAHpB;QAAA;QAAA;QAAA;MAAA,QAAP;IASH;;EA5EgC;;EA8EnC,OAAOZ,YAAP;AACL,CAhFD"},"metadata":{},"sourceType":"module"}